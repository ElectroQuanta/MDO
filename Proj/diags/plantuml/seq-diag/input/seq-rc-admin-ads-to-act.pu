  @startuml
  ' ---------- SETUP ----------------
  ' strict uml style and hide footboxes
  skinparam style strictuml
  hide footbox
  ' for anchors and duration this may be required (uncomment)
  ' !pragma teoz true

  ' ---------- Declaring participants
  ' participant Participant as Foo
  
  actor User
  box "MDO-RC" #LightBlue
  boundary "UI" as UI
  control "UI Engine" as UIE
  actor "Remote Client \nBack-End" as RC
  endbox
  box "MDO-RS" #f9db8f
  actor "Remote Server" as RS
  database "Brands DB" as BrandDB
  endbox
  ' entity      Entity      as Foo4
  ' database    Database    as Foo5
  ' collections Collections as Foo6
  ' queue       Queue       as Foo7

  ' async message
  ' == Application start ==
  ' activate User
  ' User ->> UI: starts app 
  ' deactivate User
  ' activate UI
  ' UI -> User: Show Login view
  ' deactivate UI
''
  == Admin ==
  alt Statistics
   ref over User, UI, UIE, RC, RS, BrandDB: Statistics
  else  Users
   ref over User, UI, UIE, RC, RS, BrandDB: Users
  else Ads To Activate
   activate User
   User ->> UI : Press Ads To Activate
   deactivate User
   activate UI
   UI -> UIE : ads_to_act_btn_pressed
   deactivate UI
   activate UIE
   UIE -> RC : get_ads()
   deactivate UIE
   activate RC
   RC ->> RS : get_ads()
   deactivate RC
   activate RS
   RS -> BrandDB : get_ads()
   deactivate RS
   activate BrandDB
   BrandDB -> RS : Send ads to activate info
   deactivate BrandDB
   activate RS
   RS ->> RC : Send ads to activate info
   deactivate RS
   activate RC
   RC -> UIE : Ads To Activate info
   deactivate RC
   activate UIE
   UIE -> UI : Ads To Activate view
   deactivate UIE
   activate UI
   UI -> User : show Ads To Activate view
   deactivate UI
   activate User
   User ->> UI : Accept/Deny ad
   deactivate User
   activate UI
   UI -> UIE : (accept/deny)_btn_pressed
   deactivate UI
   alt Accept Ad
     activate UIE
     UIE -> RC : accept(ad)
     deactivate UIE
     activate RC
     RC ->> RS : accept(ad)
     deactivate RC
     activate RS
     RS -> BrandDB : accept(ad)
     deactivate RS
     activate BrandDB
     BrandDB -> BrandDB : Update
     deactivate BrandDB
   else Deny Ad
     activate UIE
     UIE -> RC : deny(ad, message)
     deactivate UIE
     activate RC
     RC ->> RS : deny(ad, message)
     deactivate RC
     activate RS
     RS -> BrandDB : deny(ad, message)
     deactivate RS
     activate BrandDB
     BrandDB -> BrandDB : Update
     deactivate BrandDB
   end
  else Test Operation
    ref over User, UI, UIE, RC, RS, BrandDB: Test Operation 
  else Logout
    ref over User, UI, UIE, RC, RS, BrandDB: Logout
   'activate User
   'User ->> UI : Press Logout
   'deactivate User
   'activate UI
   'UI -> UIE : logout_btn_pressed
   'deactivate UI
   'activate UIE
   'UIE -> RC : logout()
   'deactivate UIE
   'RC -> RC : logout()
  end
''
  deactivate User
  activate UI
  deactivate UI
  activate UIE
@enduml
