  @startuml
  ' ---------- SETUP ----------------
  ' strict uml style and hide footboxes
  skinparam style strictuml
  hide footbox
  ' for anchors and duration this may be required (uncomment)
  ' !pragma teoz true

  ' ---------- Declaring participants
  ' participant Participant as Foo
  
  actor Admin
  box "MDO-RC" #LightBlue
  'boundary "UI" as UI
  'control "UI Engine" as UIE
  actor "Remote Client \nBack-End" as RC
  endbox
  box "MDO-RS" #f9db8f
  actor "Remote Server" as RS
  endbox
  box "MDO-LS" #aabbcc
  actor "Local System" as LS
  endbox
  ' entity      Entity      as Foo4
  ' database    Database    as Foo5
  ' collections Collections as Foo6
  ' queue       Queue       as Foo7

  ' async message
  '== Application start == 
     alt Power On/Off camera
      activate Admin
      Admin ->> RC --++ : enable/disable camera
      RC ->> RS --++ : camera(enable, station)
      activate LS
      RS ->> LS -- : c <enable>
      deactivate LS
      ref over Admin, RC, RS, LS: command feedback
     else Facial Recognition Testing
     ' ref over Admin, RC, RS, LS: Test Facial Recognition
      activate Admin
      Admin ->> RC --++ : apply face recognition
      RC ->> RS --++ : facial_rec(enable)
      activate LS
      RS ->> LS -- : f <enable>
      deactivate LS
      ref over Admin, RC, RS, LS: command feedback
     else Image Filter Testing
      activate Admin
      Admin ->> RC --++: select/apply/reject\nfilter
      RC ->> RS --++: select/apply/reject\n<filter> <station>
      activate LS
      RS ->> LS -- : i s/a/r <name> <filter>
      deactivate LS
      ref over Admin, RC, RS, LS: Apply Filter
      ref over Admin, RC, RS, LS: command feedback
     else Take Picture Testing
     ' ref over Admin, RC, RS, LS: Test Take Picture
      activate Admin
      Admin ->> RC --++ : Take Picture
      RC ->> RS --++ : take_pic(station, filename)
      activate LS
      RS ->> LS -- : p <fname>
      deactivate LS
      ref over Admin, RC, RS, LS: Take Picture
      ref over Admin, RC, RS, LS: command feedback
     else Create GIF Testing
      'ref over Admin, RC, RS, LS: Test Create GIF
      activate Admin
      Admin ->> RC --++ : Creat GIF
      RC ->> RS --++ : create_gif(station, filename)
      activate LS
      RS ->> LS -- : g <fname>
      deactivate LS
      ref over Admin, RC, RS, LS: Create GIF
      ref over Admin, RS, RC, LS: command feedback
     end 
     
' =========================== ZE das couves ==============================='
'  LS -> UIE: show Image Filter view
'  UIE -> User: visual feedback
'  ref over User, GRE, UIE, LS: Image Filter
' -------
'    else Take Pic
'    LS -> UIE: show Pic view
'    UIE -> User: visual feedback
'    ref over User, GRE, UIE, LS: Picture mode
' -------
'    else Create GIF
'    LS -> UIE: show GIF view
'    UIE -> User: visual feedback
'    ref over User, GRE, UIE, LS: GIF mode
'    '' LS -> LS: process gesture \ncallback
'    '' LS -> UIE: provide output
'    '' UIE -> User: visual feedback
'    ' end alt
'    end 
' end par
'  end
		

  @enduml
