  @startuml
  ' ---------- SETUP ----------------
  ' strict uml style and hide footboxes
  skinparam style strictuml
  hide footbox
  ' for anchors and duration this may be required (uncomment)
  ' !pragma teoz true

  ' ---------- Declaring participants
  ' participant Participant as Foo
  
  actor Admin
  box "MDO-RC" #LightBlue
  'boundary "UI" as UI
  'control "UI Engine" as UIE
  actor "Remote Client \nBack-End" as RC
  endbox
  box "MDO-RS" #f9db8f
  actor "Remote Server" as RS
  database "Databases" as DB
  endbox
  box "MDO-LS" #aabbcc
  actor "Local System" as LS
  endbox
  ' entity      Entity      as Foo4
  ' database    Database    as Foo5
  ' collections Collections as Foo6
  ' queue       Queue       as Foo7

  ' async message
  '== Application start == 
  'Test Operation (if Admin)
    alt Video, Audio and Fragrance
     activate Admin
     Admin ->> RC --++ : video/audio/fragrance\nadd/delete/play/stop\n<station>
     'deactivate Admin
     'activate RC
     RC ->> RS :  video/audio/fragrance\nadd/delete/play/stop\n<station>
     deactivate RC
     activate RS
     activate LS
     RS ->> LS : v/a/f a/d/p/s \n <fname>/<option>\n<station>
     deactivate RS
     deactivate LS
    else Camera
     alt Turn On/Off
      activate Admin
      Admin ->> RC --++ : turn_on/turn_off camera
      RC ->> RS --++ : turn_on/turn_off(station)
      activate LS
      RS ->> LS -- : 0/1 <station>
      deactivate LS      
     else Facial Recognition
      activate Admin
      Admin ->> RC --++ : apply face recognition
      RC ->> RS --++ : facial_rec()
      activate LS
      RS ->> LS -- : f
      deactivate LS
     else Image Filter
      activate Admin
      Admin ->> RC --++: select/apply/reject\nfilter
      RC ->> RS --++: select/apply/reject\n<filter> <station>
      activate LS
      RS ->> LS -- : i s/a/r <name> <filter>
      deactivate LS
     else Take Picture
      activate Admin
      Admin ->> RC --++ : Take Picture
      RC ->> RS --++ : take_pic(station, filename)
      RS ->> LS --++ : p <fname> <station>
      activate DB 
      LS ->> DB -- : save <fname>
      deactivate DB
     else Create GIF
      activate Admin
      Admin ->> RC --++ : Take GIF
      RC ->> RS --++ : take_gif(station, filename)
      RS ->> LS --++ : g <fname> <station>
      activate DB 
      LS ->> DB -- : save <fname>
      deactivate DB
     end
    else Share
     activate Admin
     Admin ->> RC --++ : Share Post
     RC ->> RS --++ : share(station, SM_opt,\n msg, attachement)
     RS ->> LS --++ : s <SM_opt> <msg>\n <attachement> <station>  
     LS -> LS : share  
   end
   
' =========================== ZE das couves ==============================='
'  LS -> UIE: show Image Filter view
'  UIE -> User: visual feedback
'  ref over User, GRE, UIE, LS: Image Filter
' -------
'    else Take Pic
'    LS -> UIE: show Pic view
'    UIE -> User: visual feedback
'    ref over User, GRE, UIE, LS: Picture mode
' -------
'    else Create GIF
'    LS -> UIE: show GIF view
'    UIE -> User: visual feedback
'    ref over User, GRE, UIE, LS: GIF mode
'    '' LS -> LS: process gesture \ncallback
'    '' LS -> UIE: provide output
'    '' UIE -> User: visual feedback
'    ' end alt
'    end 
' end par
'  end
		

  @enduml
