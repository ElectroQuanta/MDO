  @startuml
  ' ---------- SETUP ----------------
  ' strict uml style and hide footboxes
  skinparam style strictuml
  hide footbox
  ' for anchors and duration this may be required (uncomment)
  ' !pragma teoz true

  ' ---------- Declaring participants
  ' participant Participant as Foo
  
  'actor Admin
  box "MDO-RC" #LightBlue
  'boundary "UI" as UI
  'control "UI Engine" as UIE
  actor "Remote Client \nBack-End" as RC
  endbox
  box "MDO-RS" #f9db8f
  actor "Remote Server" as RS
  database "User DB" as UserDB
  endbox
  'actor "Local System" as LS
  ' entity      Entity      as Foo4
  ' database    Database    as Foo5
  ' collections Collections as Foo6
  ' queue       Queue       as Foo7

  ' async message
  '== Application start ==
  'else Authenticate User
   activate RC
   RC ->> RS : login(username, encrypt_pass)
   deactivate RC
   activate RS
   RS -> UserDB : search(username)
   deactivate RS
   alt User found
    activate UserDB
    UserDB -> RS : Send username and encrypt_pass
    deactivate UserDB
    activate RS
    RS -> RS : compare passwords
    alt success
     RS ->> RC : Authentication Success
     activate RC
      ref over RC, RS, UserDB: Manage DBs
     alt Admin
      ref over RC, RS, UserDB: Test Operation
     end
    else fail
     RS ->> RC : Authentication Fail
    end
    deactivate RS
    deactivate RC
   else User not found
    activate UserDB
    UserDB -> RS : empty
    deactivate UserDB
    activate RS
    RS ->> RC : Authentication Fail
    activate RC
   end
  'else Manage DBs
  ' ref over RC, RS, UserDB: Manage DBs
  'else Test Operation
  ' ref over RC, RS, UserDB: Test Operation
  'else Logout
  ' ref over RC, RS, UserDB: Logout
   
' =========================== ZE das couves ==============================='
'  LS -> UIE: show Image Filter view
'  UIE -> User: visual feedback
'  ref over User, GRE, UIE, LS: Image Filter
' -------
'    else Take Pic
'    LS -> UIE: show Pic view
'    UIE -> User: visual feedback
'    ref over User, GRE, UIE, LS: Picture mode
' -------
'    else Create GIF
'    LS -> UIE: show GIF view
'    UIE -> User: visual feedback
'    ref over User, GRE, UIE, LS: GIF mode
'    '' LS -> LS: process gesture \ncallback
'    '' LS -> UIE: provide output
'    '' UIE -> User: visual feedback
'    ' end alt
'    end 
' end par
'  end
		

  @enduml
