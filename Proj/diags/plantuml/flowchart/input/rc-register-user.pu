@startuml
'-----------------------
  note right
    Registration menu
    (adding a user)
  end note
'-----------------------
  start
    repeat
    repeat while(register_btn pressed?) is (No) not (Yes)
    
    if (All fields are filled?) then (Yes)  
    
      :Create object User user(username, email, pass);
      note left 
        The user is BRAND
        by default
      end note

      :db_query = "select count (*) from user where (username =
      " + user.name() + " or email = " + user.email() + ");";
      
      note left
        Verify if doesn't exist
        already an user.
      end note

      :rxFrame.header = DB
      rxFrame.len = db_query.length
      rxFrame.data = db_query
      server.send(rxFrame, rxFrame.len);
      
      :wait for server response (async);

      if (count != 0) then (No)
        
      
      else (Yes)
        :Error! It already exists an
        user with that username or email!;
        stop
      endif   

      :db_values = user.serialize()
      db_query = db.buildQuery(DB_OPER::INSERT,
      DB_OBJ::USER, db_values);
      note left
        Create the string
        to perform the query
      end note

      :rxFrame.header = DB
      rxFrame.len = db_query.length
      rxFrame.data = db_query
      server.send(rxFrame, rxFrame.len);

      :wait for server response (async);

      if(User added successfully?) then (Yes)
        :User was added successfully!;
      else (No)
        :Error! User could not be added.;
      endif
    else (No)
      :Error! Fill all the fields;
    endif   
  stop
  
'-----------------------
@enduml
