@startuml
'-----------------------
  note right
    Thread to Receive 
  end note
'-----------------------
start
    repeat
        :nbytes = recv(sd, size, tmp_buff, 0);
        note left
            It only exits from here
            when it receives something
        end note

        if (nbytes > 0) then (Yes)
            :frame = (rxFrame*) tmp_buff;
            note right
                cast the received data
            end note
            if (nbytes == MAX_BYTES) then (Yes)
                if(Last byte is end of string?) then (No)
                    :receive rest of the data and
                    add that data to frame.data;
                else (Yes)
                endif
            else (No)
            endif
            :server_frame.sd = sd 
            server_frame.rxFrame = &tmp_buff
            pthread_mutex_lock(&RxVecAccess)
            semaphore_wait(receive_sem)
            cli.RxVec.push(server_frame)
            pthread_mutex_unlock(&RxVecAccess);
            note right
                push to the rx vector
                grab a semaphore 
                protect the vector with the mutex
            end note

            :pthread_cond_signal(msgRx); 
            note right
                notify the reception
                of the data
            end note
        else (No)
        endif
        'backward
    repeat while()
  
'-----------------------
@enduml
